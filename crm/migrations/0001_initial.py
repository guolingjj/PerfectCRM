# Generated by Django 2.0.1 on 2018-04-08 01:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='邮箱')),
                ('password', models.CharField(help_text="<a href='../password_reset'>点我改密码</a>", max_length=128, verbose_name='password')),
                ('name', models.CharField(max_length=32, verbose_name='用户姓名')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否活跃')),
                ('is_admin', models.BooleanField(default=False, verbose_name='是否是管理员')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': '用户',
                'permissions': (('can_access_submit_homework', '可以提交作业'), ('can_add_customer', '可以添加客户'), ('can_add_user', '可以添加用户')),
            },
        ),
        migrations.CreateModel(
            name='Brach',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('addr', models.CharField(max_length=128)),
            ],
            options={
                'verbose_name': '校区',
            },
        ),
        migrations.CreateModel(
            name='Clazz',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.PositiveSmallIntegerField(verbose_name='学期')),
                ('type', models.SmallIntegerField(choices=[(0, '面授(脱产)'), (1, '面授(周末)'), (2, '面授(全期)'), (3, '网络')])),
                ('start_data', models.DateField(verbose_name='开班日期')),
                ('end_data', models.DateField(blank=True, null=True, verbose_name='结业日期')),
                ('brach', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.Brach', verbose_name='校区')),
            ],
            options={
                'verbose_name': '班级',
            },
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='名字')),
                ('content', models.CharField(max_length=1024, verbose_name='合同')),
            ],
            options={
                'verbose_name': '合同',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='课程名字')),
                ('price', models.PositiveSmallIntegerField(verbose_name='课程价格')),
                ('period', models.PositiveSmallIntegerField(verbose_name='课程周期')),
                ('outline', models.TextField(verbose_name='课程大纲')),
            ],
            options={
                'verbose_name': '课程表',
            },
        ),
        migrations.CreateModel(
            name='CourseRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('has_homework', models.BooleanField(default=True, verbose_name='是否有作业')),
                ('home_title', models.CharField(max_length=32, verbose_name='作业的标题')),
                ('outline', models.CharField(max_length=128, verbose_name='本节课的大纲')),
                ('homework', models.TextField(blank=True, null=True, verbose_name='作业的内容')),
                ('day_num', models.PositiveSmallIntegerField(verbose_name='第几节课')),
                ('data', models.DateField(auto_now_add=True, verbose_name='上课时间')),
                ('clazz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.Clazz', verbose_name='班级')),
                ('teachers', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='上课老师')),
            ],
            options={
                'verbose_name': '上课记录',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=32, verbose_name='名字')),
                ('qq', models.CharField(max_length=64, unique=True)),
                ('phone', models.CharField(blank=True, max_length=64, null=True, verbose_name='手机号码')),
                ('qq_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='qq名字')),
                ('status', models.SmallIntegerField(choices=[(0, '未报名'), (1, '等待填写报名信息'), (2, '等待审核'), (3, '等待缴费'), (4, '学员')], default=0, verbose_name='报名状态')),
                ('source', models.SmallIntegerField(choices=[(0, '转介绍'), (1, 'qq群'), (2, '官网'), (3, '百度推广'), (4, '51CTO'), (5, '知乎'), (6, '市场推广')], verbose_name='来源于')),
                ('referral_from', models.CharField(blank=True, max_length=64, verbose_name='转介紹人')),
                ('content', models.TextField(verbose_name='咨询详情')),
                ('memo', models.TextField(blank=True, null=True, verbose_name='备注')),
                ('data', models.DateTimeField(auto_now_add=True, verbose_name='时间')),
                ('id_num', models.CharField(blank=True, max_length=64, null=True, verbose_name='身份证')),
                ('email', models.EmailField(blank=True, max_length=64, null=True, verbose_name='常用邮箱')),
                ('consult_course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.Course', verbose_name='咨询课程')),
                ('consultant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='接待人')),
            ],
            options={
                'verbose_name': '客户表',
            },
        ),
        migrations.CreateModel(
            name='CustomFollowUp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='跟进内容')),
                ('followup_times', models.PositiveSmallIntegerField(default=1, verbose_name='跟进次数')),
                ('itention', models.SmallIntegerField(choices=[(0, '2周内报名'), (1, '一月内报名'), (2, '无报名计划'), (3, '已在其他机构报名'), (4, '已报名'), (5, '已拉黑')], verbose_name='计划')),
                ('data', models.DateTimeField(auto_now_add=True, verbose_name='时间')),
                ('consultant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='跟进人')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.Customer', verbose_name='客户名')),
            ],
            options={
                'verbose_name': '客户跟进表',
            },
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contract_agreed', models.BooleanField(default=False, verbose_name='学员同意')),
                ('consultant_approval', models.BooleanField(default=False, verbose_name='审核人已审核')),
                ('data', models.DateTimeField(auto_now_add=True)),
                ('consultant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='签单人')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.Customer', verbose_name='客户')),
                ('enrolled_clazz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.Clazz', verbose_name='所报班级')),
            ],
            options={
                'verbose_name': '报名表',
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='菜单名字')),
                ('url_name', models.CharField(max_length=128, verbose_name='菜单url')),
                ('url_type', models.SmallIntegerField(choices=[(0, 'alias'), (1, 'absolute_url')], default=0, verbose_name='菜单类型')),
            ],
            options={
                'verbose_name': '菜单',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveIntegerField(default=500, verbose_name='已交数额')),
                ('data', models.DateTimeField(auto_now_add=True)),
                ('pay_status', models.SmallIntegerField(choices=[(0, '未缴费'), (1, '已缴纳部分金额'), (2, '已缴费')], default=0)),
                ('consultant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='协助缴费人')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.Customer')),
                ('pay_course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.Course', verbose_name='缴费课程')),
            ],
            options={
                'verbose_name': '缴费记录',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='角色名字')),
                ('menus', models.ManyToManyField(blank=True, to='crm.Menu', verbose_name='角色菜单')),
            ],
            options={
                'verbose_name': '角色',
            },
        ),
        migrations.CreateModel(
            name='StudyRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attendance', models.PositiveSmallIntegerField(choices=[(0, '已签到'), (1, '迟到'), (2, '缺勤'), (3, '早退'), (4, '请假')], default=0, verbose_name='考勤')),
                ('has_submit_homework', models.BooleanField(default=False, verbose_name='是否提交作业')),
                ('score', models.SmallIntegerField(choices=[(100, 'A+'), (90, 'A'), (80, 'B'), (60, 'C'), (40, 'D'), (-50, 'E'), (-100, 'copy'), (0, 'N/A')], default=0, verbose_name='成绩')),
                ('memo', models.TextField(blank=True, null=True, verbose_name='本节课备注')),
                ('data', models.DateTimeField(auto_now_add=True, verbose_name='学习时间')),
                ('course_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.CourseRecord', verbose_name='上课记录')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='学生姓名')),
            ],
            options={
                'verbose_name': '学习记录',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True)),
            ],
            options={
                'verbose_name': '标签',
            },
        ),
        migrations.AddField(
            model_name='customer',
            name='tag',
            field=models.ManyToManyField(blank=True, null=True, to='crm.Tag', verbose_name='标签'),
        ),
        migrations.AddField(
            model_name='clazz',
            name='contract',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.Contract', verbose_name='合同'),
        ),
        migrations.AddField(
            model_name='clazz',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.Course', verbose_name='课程名字'),
        ),
        migrations.AddField(
            model_name='clazz',
            name='teachers',
            field=models.ManyToManyField(to=settings.AUTH_USER_MODEL, verbose_name='班级老师'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='role',
            field=models.ManyToManyField(to='crm.Role', verbose_name='角色'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='stu_customer',
            field=models.OneToOneField(blank=True, help_text='只有交费成功的用户能够注册', null=True, on_delete=django.db.models.deletion.CASCADE, to='crm.Customer', verbose_name='用户对应的客户'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AlterUniqueTogether(
            name='studyrecord',
            unique_together={('student', 'course_record')},
        ),
        migrations.AlterUniqueTogether(
            name='payment',
            unique_together={('customer', 'pay_course')},
        ),
        migrations.AlterUniqueTogether(
            name='enrollment',
            unique_together={('customer', 'enrolled_clazz')},
        ),
        migrations.AlterUniqueTogether(
            name='customfollowup',
            unique_together={('customer', 'followup_times')},
        ),
        migrations.AlterUniqueTogether(
            name='courserecord',
            unique_together={('clazz', 'day_num')},
        ),
        migrations.AlterUniqueTogether(
            name='clazz',
            unique_together={('brach', 'course', 'semester')},
        ),
    ]
